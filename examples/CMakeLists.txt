if(ENABLE_ASMJIT)
	add_executable(sum sum.cpp)
	target_compile_definitions(sum PRIVATE "ENABLE_ASMJIT")
	target_link_libraries(sum ${ASMJIT_LIBRARIES} ${ASMJIT_PERF_LIBRARIES})
	add_test(test_sum sum)
endif()
if(ENABLE_LLVMJIT)
	add_executable(sumLLVM sum.cpp)
	target_compile_definitions(sumLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(sumLLVM ${LLVM_LIBRARIES})
	add_test(test_sumLLVM sumLLVM)
endif()


if(ENABLE_ASMJIT)
	add_executable(cast cast.cpp)
	target_compile_definitions(cast PRIVATE "ENABLE_ASMJIT")
	target_link_libraries(cast ${ASMJIT_LIBRARIES} ${ASMJIT_PERF_LIBRARIES})
	add_test(test_cast cast)
endif()
if(ENABLE_LLVMJIT)
	add_executable(castLLVM cast.cpp)
	target_compile_definitions(castLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(castLLVM ${LLVM_LIBRARIES})
	add_test(test_castLLVM castLLVM)
endif()


if(ENABLE_ASMJIT)
	add_executable(call call.cpp)
	target_compile_definitions(call PRIVATE "ENABLE_ASMJIT")
	target_link_libraries(call ${ASMJIT_LIBRARIES} ${ASMJIT_PERF_LIBRARIES})
	add_test(test_call call)
endif()
if(ENABLE_LLVMJIT)
	add_executable(callLLVM call.cpp)
	target_compile_definitions(callLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(callLLVM ${LLVM_LIBRARIES})
	add_test(test_callLLVM callLLVM)
endif()


if(ENABLE_ASMJIT)
	add_executable(reading reading_datastruct.cpp)
	target_compile_definitions(reading PRIVATE "ENABLE_ASMJIT")
	target_link_libraries(reading ${ASMJIT_LIBRARIES} ${ASMJIT_PERF_LIBRARIES})
	add_test(test_reading reading)
endif()
if(ENABLE_LLVMJIT)
	add_executable(readingLLVM reading_datastruct.cpp)
	target_compile_definitions(readingLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(readingLLVM ${LLVM_LIBRARIES})
	add_test(test_readingLLVM readingLLVM)
endif()

# just trying vector types
if(ENABLE_ASMJIT)
	add_executable(vectormean vectormean.cpp)
	target_compile_definitions(vectormean PRIVATE "ENABLE_ASMJIT")
	target_link_libraries(vectormean ${ASMJIT_LIBRARIES} ${ASMJIT_PERF_LIBRARIES})
	add_test(test_vectormean vectormean)
endif()
if(ENABLE_LLVMJIT)
	add_executable(vectormeanLLVM vectormean.cpp)
	target_compile_definitions(vectormeanLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(vectormeanLLVM ${LLVM_LIBRARIES})
	add_test(test_vectormeanLLVM vectormeanLLVM)
endif()


if(ENABLE_LLVMJIT)
	add_executable(vectormergeLLVM vectormerge.cpp)
	target_compile_definitions(vectormergeLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(vectormergeLLVM ${LLVM_LIBRARIES})
endif()
if(ENABLE_LLVMJIT)
	add_executable(vectorintersectionLLVM vectorintersection.cpp)
	target_compile_definitions(vectorintersectionLLVM PRIVATE "ENABLE_LLVMJIT")
	target_link_libraries(vectorintersectionLLVM ${LLVM_LIBRARIES})
endif()
